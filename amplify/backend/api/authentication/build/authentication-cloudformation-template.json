{
  "Description": "API Gateway Resource for AWS Amplify CLI",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "functionauthenticationName": {
      "Type": "String",
      "Default": "functionauthenticationName"
    },
    "functionauthenticationArn": {
      "Type": "String",
      "Default": "functionauthenticationArn"
    },
    "env": {
      "Type": "String"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Outputs": {
    "RootUrl": {
      "Description": "Root URL of the API gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "authentication"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            {
              "Fn::If": [
                "ShouldNotCreateEnvResources",
                "Prod",
                {
                  "Ref": "env"
                }
              ]
            }
          ]
        ]
      }
    },
    "ApiName": {
      "Description": "API Friendly name",
      "Value": "authentication"
    },
    "ApiId": {
      "Description": "API ID (prefix of API URL)",
      "Value": {
        "Ref": "authentication"
      }
    }
  },
  "Resources": {
    "functionauthenticationPermissionauthentication": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "functionauthenticationName"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "authentication"
              },
              "/*/*/*"
            ]
          ]
        }
      }
    },
    "authentication": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "2018-05-24T17:52:00Z",
            "title": "authentication"
          },
          "host": {
            "Fn::Join": [
              "",
              [
                "apigateway.",
                {
                  "Ref": "AWS::Region"
                },
                ".amazonaws.com"
              ]
            ]
          },
          "basePath": {
            "Fn::If": [
              "ShouldNotCreateEnvResources",
              "/Prod",
              {
                "Fn::Join": [
                  "",
                  [
                    "/",
                    {
                      "Ref": "env"
                    }
                  ]
                ]
              }
            ]
          },
          "schemes": [
            "https"
          ],
          "paths": {
            "/{request}": {
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock"
                }
              },
              "x-amazon-apigateway-any-method": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "parameters": [
                  {
                    "in": "body",
                    "name": "RequestSchema",
                    "required": false,
                    "schema": {
                      "$ref": "#/definitions/RequestSchema"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/ResponseSchema"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Ref": "functionauthenticationArn"
                        },
                        "/invocations"
                      ]
                    ]
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            },
            "/{request}/{proxy+}": {
              "options": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      },
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      }
                    }
                  },
                  "requestTemplates": {
                    "application/json": "{\"statusCode\": 200}"
                  },
                  "passthroughBehavior": "when_no_match",
                  "type": "mock"
                }
              },
              "x-amazon-apigateway-any-method": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "parameters": [
                  {
                    "in": "body",
                    "name": "RequestSchema",
                    "required": false,
                    "schema": {
                      "$ref": "#/definitions/RequestSchema"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/ResponseSchema"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Ref": "functionauthenticationArn"
                        },
                        "/invocations"
                      ]
                    ]
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "type": "aws_proxy"
                }
              }
            }
          },
          "securityDefinitions": {
            "sigv4": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          },
          "definitions": {
            "RequestSchema": {
              "type": "object",
              "required": [
                "request"
              ],
              "properties": {
                "request": {
                  "type": "string"
                }
              },
              "title": "Request Schema"
            },
            "ResponseSchema": {
              "type": "object",
              "required": [
                "response"
              ],
              "properties": {
                "response": {
                  "type": "string"
                }
              },
              "title": "Response Schema"
            }
          }
        },
        "Description": "",
        "FailOnWarnings": true,
        "Name": "authentication"
      }
    },
    "authenticationDefault4XXResponse73483638": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "authentication"
        },
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
          "gatewayresponse.header.Access-Control-Expose-Headers": "'Date,X-Amzn-ErrorType'"
        }
      }
    },
    "authenticationDefault5XXResponse73483638": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "authentication"
        },
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
          "gatewayresponse.header.Access-Control-Expose-Headers": "'Date,X-Amzn-ErrorType'"
        }
      }
    },
    "DeploymentAPIGWauthenticationa5cc8f88": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "authentication"
        },
        "Description": "The Development stage deployment of your API.",
        "StageName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "Prod",
            {
              "Ref": "env"
            }
          ]
        }
      },
      "DependsOn": [
        "authenticationDefault4XXResponse73483638",
        "authenticationDefault5XXResponse73483638"
      ]
    }
  }
}